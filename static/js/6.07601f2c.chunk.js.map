{"version":3,"sources":["pages/Portfolio/Portfolio.js","pages/Portfolio/index.js"],"names":["Project","forwardRef","props","ref","className","href","link","rel","target","src","image","alt","ProjectsList","projects","options","dependencies","sortedAndFilteredProjects","filter","sort","map","project","id","typeName","length","connect","state","portfolio","data","useState","filterDependencies","setFilterDependencies","sortedIn","a","b","date","t","every","dep","technologies","includes","setOptions","listOfPossibleTechnologies","setListOfPossibleTechnologies","toggleFilterDependencies","dependency","list","useEffect","Set","flatMap","item","onClick","style","cursor","tech","onKeyDown","e","key","Portfolio"],"mappings":"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","file":"static/js/6.07601f2c.chunk.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport { forwardRef, useState, useEffect } from 'react';\r\nimport FlipMove from 'react-flip-move';\r\nimport { FaArrowDown, FaArrowUp } from 'react-icons/fa';\r\n\r\nconst Project = forwardRef((props, ref) => {\r\n  return (\r\n    <li ref={ref} className=\"project\">\r\n      <a\r\n        className=\"project__link\"\r\n        href={props.link}\r\n        rel=\"noreferrer\"\r\n        target=\"_blank\">\r\n        <div className=\"project__imageContainer\">\r\n          <img src={props.image} alt=\"Site example\" />\r\n        </div>\r\n        {/* <div className=\"project__info\">\r\n          <h3 className=\"project__title\">{props.title}</h3>\r\n          <p className=\"project__description\">{props.description}</p>\r\n        </div> */}\r\n      </a>\r\n    </li>\r\n  );\r\n});\r\nconst ProjectsList = ({ projects = [], options = [], dependencies }) => {\r\n  const sortedAndFilteredProjects = [...projects]\r\n    .filter(options.filter(dependencies))\r\n    .sort(options.sort)\r\n    .map((project) => <Project key={project.id} {...project} />);\r\n\r\n  return (\r\n    <FlipMove typeName=\"ul\" className=\"projects-list\">\r\n      {sortedAndFilteredProjects.length ? (\r\n        sortedAndFilteredProjects\r\n      ) : (\r\n        <li className=\"projects-list__message\">\r\n          Нет проектов по заданным фильтрам\r\n        </li>\r\n      )}\r\n    </FlipMove>\r\n  );\r\n};\r\n\r\nconst Portfolio = ({ portfolio }) => {\r\n  const [filterDependencies, setFilterDependencies] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    sortedIn: 'Asc',\r\n    sort: (a, b) => b.date - a.date,\r\n    filter: (dependencies) => (t) =>\r\n      dependencies.every((dep) => t.technologies.includes(dep)),\r\n  });\r\n  const [listOfPossibleTechnologies, setListOfPossibleTechnologies] = useState(\r\n    []\r\n  );\r\n  const sortDesc = () => {\r\n    setOptions((options) => ({\r\n      ...options,\r\n      sortedIn: 'Desc',\r\n      sort: (a, b) => a.date - b.date,\r\n    }));\r\n  };\r\n  const sortAsc = () => {\r\n    setOptions((options) => ({\r\n      ...options,\r\n      sortedIn: 'Asc',\r\n      sort: (a, b) => b.date - a.date,\r\n    }));\r\n  };\r\n  const toggleFilterDependencies = (dependency) => {\r\n    if (filterDependencies.includes(dependency)) {\r\n      setFilterDependencies((list) => list.filter((dep) => dep !== dependency));\r\n    } else {\r\n      setFilterDependencies((list) => [...list, dependency]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!portfolio) return;\r\n\r\n    setListOfPossibleTechnologies([\r\n      ...new Set(portfolio.flatMap((item) => item.technologies)),\r\n    ]);\r\n  }, [portfolio]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"portfolio\">\r\n        <h2 className=\"title\">\r\n          <span>Portfolio</span>\r\n        </h2>\r\n        <div className=\"options\">\r\n          <div className=\"options__left\">\r\n            <button\r\n              className={`options__sort ${\r\n                options.sortedIn === 'Asc'\r\n                  ? 'options__sort--1'\r\n                  : 'options__sort--2'\r\n              }`}\r\n              onClick={options.sortedIn === 'Asc' ? sortDesc : sortAsc}>\r\n              <span>Date</span>{' '}\r\n              <span className=\"options__sort-icon\">\r\n                {options.sortedIn === 'Asc' ? <FaArrowUp /> : <FaArrowDown />}\r\n              </span>\r\n            </button>\r\n          </div>\r\n          <div className=\"options__right\">\r\n            <button\r\n              onClick={() => setFilterDependencies([])}\r\n              style={{\r\n                cursor: filterDependencies.length ? 'pointer' : 'default',\r\n              }}\r\n              className={`options__filter ${\r\n                filterDependencies.length\r\n                  ? 'options__filter--2'\r\n                  : 'options__filter--1'\r\n              }`}>\r\n              All\r\n            </button>\r\n            {listOfPossibleTechnologies.map((tech) => (\r\n              <button\r\n                className={`options__filter ${\r\n                  filterDependencies.includes(tech)\r\n                    ? 'options__filter--1'\r\n                    : 'options__filter--2'\r\n                }`}\r\n                key={tech}\r\n                onClick={() => {\r\n                  toggleFilterDependencies(tech);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    toggleFilterDependencies(tech);\r\n                  }\r\n                }}>\r\n                {tech}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <ProjectsList\r\n          projects={portfolio}\r\n          options={options}\r\n          dependencies={filterDependencies}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  portfolio: state.data?.portfolio,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Portfolio);\r\n","import Portfolio from './Portfolio';\r\n\r\nexport default Portfolio;\r\n"],"sourceRoot":""}